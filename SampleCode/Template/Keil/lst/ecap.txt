; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\ecap.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\ecap.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\..\..\Library\CMSIS\Include -I..\..\..\Library\Device\Nuvoton\M480\Include -I..\..\..\Library\StdDriver\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=526 -D__FPU_PRESENT=1 --omf_browse=.\obj\ecap.crf ..\..\..\Library\StdDriver\src\ecap.c]
                          THUMB

                          AREA ||i.ECAP_Close||, CODE, READONLY, ALIGN=1

                  ECAP_Close PROC
;;;48       */
;;;49     void ECAP_Close(ECAP_T* ecap)
000000  6941              LDR      r1,[r0,#0x14]
;;;50     {
;;;51         /* Disable Input Capture*/
;;;52         ecap->CTL0 &= ~ECAP_CTL0_CAPEN_Msk;
000002  f0215100          BIC      r1,r1,#0x20000000
000006  6141              STR      r1,[r0,#0x14]
;;;53     }
000008  4770              BX       lr
;;;54     
                          ENDP


                          AREA ||i.ECAP_DisableINT||, CODE, READONLY, ALIGN=2

                  ECAP_DisableINT PROC
;;;94       */
;;;95     void ECAP_DisableINT(ECAP_T* ecap, uint32_t u32Mask)
000000  6942              LDR      r2,[r0,#0x14]
;;;96     {
;;;97         /* Disable input channel interrupt */
;;;98         ecap->CTL0 &= ~(u32Mask);
000002  438a              BICS     r2,r2,r1
000004  6142              STR      r2,[r0,#0x14]
;;;99     
;;;100        /* Disable NVIC ECAP IRQ */
;;;101        if(ecap == (ECAP_T*)ECAP0)
000006  4904              LDR      r1,|L2.24|
000008  4288              CMP      r0,r1
00000a  d101              BNE      |L2.16|
;;;102        {
;;;103            NVIC_DisableIRQ((IRQn_Type)ECAP0_IRQn);
00000c  2056              MOVS     r0,#0x56
00000e  e000              B        |L2.18|
                  |L2.16|
;;;104        }
;;;105        else
;;;106        {
;;;107            NVIC_DisableIRQ((IRQn_Type)ECAP1_IRQn);
000010  2057              MOVS     r0,#0x57
                  |L2.18|
000012  f7ffbffe          B.W      NVIC_DisableIRQ
;;;108        }
;;;109    }
;;;110    
                          ENDP

000016  0000              DCW      0x0000
                  |L2.24|
                          DCD      0x400b4000

                          AREA ||i.ECAP_EnableINT||, CODE, READONLY, ALIGN=2

                  ECAP_EnableINT PROC
;;;66       */
;;;67     void ECAP_EnableINT(ECAP_T* ecap, uint32_t u32Mask)
000000  6942              LDR      r2,[r0,#0x14]
;;;68     {
;;;69         /* Enable input channel interrupt */
;;;70         ecap->CTL0 |= (u32Mask);
000002  430a              ORRS     r2,r2,r1
000004  6142              STR      r2,[r0,#0x14]
;;;71     
;;;72         /* Enable NVIC ECAP IRQ */
;;;73         if(ecap == (ECAP_T*)ECAP0)
000006  4904              LDR      r1,|L3.24|
000008  4288              CMP      r0,r1
00000a  d101              BNE      |L3.16|
;;;74         {
;;;75             NVIC_EnableIRQ((IRQn_Type)ECAP0_IRQn);
00000c  2056              MOVS     r0,#0x56
00000e  e000              B        |L3.18|
                  |L3.16|
;;;76         }
;;;77         else
;;;78         {
;;;79             NVIC_EnableIRQ((IRQn_Type)ECAP1_IRQn);
000010  2057              MOVS     r0,#0x57
                  |L3.18|
000012  f7ffbffe          B.W      NVIC_EnableIRQ
;;;80         }
;;;81     }
;;;82     
                          ENDP

000016  0000              DCW      0x0000
                  |L3.24|
                          DCD      0x400b4000

                          AREA ||i.ECAP_Open||, CODE, READONLY, ALIGN=1

                  ECAP_Open PROC
;;;31       */
;;;32     void ECAP_Open(ECAP_T* ecap, uint32_t u32FuncMask)
000000  6942              LDR      r2,[r0,#0x14]
;;;33     {
;;;34         /* Clear Input capture mode*/
;;;35         ecap->CTL0 = ecap->CTL0 & ~(ECAP_CTL0_CMPEN_Msk);
000002  f0225280          BIC      r2,r2,#0x10000000
000006  6142              STR      r2,[r0,#0x14]
;;;36     
;;;37         /* Enable Input Capture and set mode */
;;;38         ecap->CTL0 |= ECAP_CTL0_CAPEN_Msk | (u32FuncMask);
000008  6942              LDR      r2,[r0,#0x14]
00000a  f0415100          ORR      r1,r1,#0x20000000
00000e  430a              ORRS     r2,r2,r1
000010  6142              STR      r2,[r0,#0x14]
;;;39     }
000012  4770              BX       lr
;;;40     
                          ENDP


                          AREA ||i.NVIC_DisableIRQ||, CODE, READONLY, ALIGN=1

                  NVIC_DisableIRQ PROC
;;;1636    */
;;;1637   __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
000000  f000021f          AND      r2,r0,#0x1f
;;;1638   {
;;;1639     NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
000004  2101              MOVS     r1,#1
000006  4091              LSLS     r1,r1,r2
000008  0940              LSRS     r0,r0,#5
00000a  0080              LSLS     r0,r0,#2
00000c  f10020e0          ADD      r0,r0,#0xe000e000
000010  f8c01180          STR      r1,[r0,#0x180]
;;;1640   }
000014  4770              BX       lr
;;;1641   
                          ENDP


                          AREA ||i.NVIC_EnableIRQ||, CODE, READONLY, ALIGN=1

                  NVIC_EnableIRQ PROC
;;;1625    */
;;;1626   __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
000000  f000021f          AND      r2,r0,#0x1f
;;;1627   {
;;;1628     NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
000004  2101              MOVS     r1,#1
000006  4091              LSLS     r1,r1,r2
000008  0940              LSRS     r0,r0,#5
00000a  0080              LSLS     r0,r0,#2
00000c  f10020e0          ADD      r0,r0,#0xe000e000
000010  f8c01100          STR      r1,[r0,#0x100]
;;;1629   }
000014  4770              BX       lr
;;;1630   
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\..\\Library\\StdDriver\\src\\ecap.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_ecap_c_a4a94a4e____REV16|
#line 388 "..\\..\\..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___6_ecap_c_a4a94a4e____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_ecap_c_a4a94a4e____REVSH|
#line 402
|__asm___6_ecap_c_a4a94a4e____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___6_ecap_c_a4a94a4e____RRX|
#line 587
|__asm___6_ecap_c_a4a94a4e____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

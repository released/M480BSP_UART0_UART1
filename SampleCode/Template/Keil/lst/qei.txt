; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\qei.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\qei.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\..\..\Library\CMSIS\Include -I..\..\..\Library\Device\Nuvoton\M480\Include -I..\..\..\Library\StdDriver\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=526 -D__FPU_PRESENT=1 --omf_browse=.\obj\qei.crf ..\..\..\Library\StdDriver\src\qei.c]
                          THUMB

                          AREA ||i.NVIC_DisableIRQ||, CODE, READONLY, ALIGN=1

                  NVIC_DisableIRQ PROC
;;;1636    */
;;;1637   __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
000000  f000021f          AND      r2,r0,#0x1f
;;;1638   {
;;;1639     NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
000004  2101              MOVS     r1,#1
000006  4091              LSLS     r1,r1,r2
000008  0940              LSRS     r0,r0,#5
00000a  0080              LSLS     r0,r0,#2
00000c  f10020e0          ADD      r0,r0,#0xe000e000
000010  f8c01180          STR      r1,[r0,#0x180]
;;;1640   }
000014  4770              BX       lr
;;;1641   
                          ENDP


                          AREA ||i.NVIC_EnableIRQ||, CODE, READONLY, ALIGN=1

                  NVIC_EnableIRQ PROC
;;;1625    */
;;;1626   __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
000000  f000021f          AND      r2,r0,#0x1f
;;;1627   {
;;;1628     NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
000004  2101              MOVS     r1,#1
000006  4091              LSLS     r1,r1,r2
000008  0940              LSRS     r0,r0,#5
00000a  0080              LSLS     r0,r0,#2
00000c  f10020e0          ADD      r0,r0,#0xe000e000
000010  f8c01100          STR      r1,[r0,#0x100]
;;;1629   }
000014  4770              BX       lr
;;;1630   
                          ENDP


                          AREA ||i.QEI_Close||, CODE, READONLY, ALIGN=1

                  QEI_Close PROC
;;;28       */
;;;29     void QEI_Close(QEI_T* qei)
000000  2100              MOVS     r1,#0
;;;30     {
;;;31         /* Reset QEI configuration */
;;;32         qei->CTL = (uint32_t)0;
000002  6181              STR      r1,[r0,#0x18]
;;;33     }
000004  4770              BX       lr
;;;34     
                          ENDP


                          AREA ||i.QEI_DisableInt||, CODE, READONLY, ALIGN=2

                  QEI_DisableInt PROC
;;;45       */
;;;46     void QEI_DisableInt(QEI_T* qei, uint32_t u32IntSel)
000000  6982              LDR      r2,[r0,#0x18]
;;;47     {
;;;48         /* Disable QEI specified interrupt */
;;;49         QEI_DISABLE_INT(qei, u32IntSel);
000002  438a              BICS     r2,r2,r1
000004  6182              STR      r2,[r0,#0x18]
;;;50     
;;;51         /* Disable NVIC QEI IRQ */
;;;52         if(qei ==(QEI_T*)QEI0)
000006  4904              LDR      r1,|L4.24|
000008  4288              CMP      r0,r1
00000a  d101              BNE      |L4.16|
;;;53         {
;;;54             NVIC_DisableIRQ((IRQn_Type)QEI0_IRQn);
00000c  2054              MOVS     r0,#0x54
00000e  e000              B        |L4.18|
                  |L4.16|
;;;55         }
;;;56         else
;;;57         {
;;;58             NVIC_DisableIRQ((IRQn_Type)QEI1_IRQn);
000010  2055              MOVS     r0,#0x55
                  |L4.18|
000012  f7ffbffe          B.W      NVIC_DisableIRQ
;;;59         }
;;;60     }
;;;61     
                          ENDP

000016  0000              DCW      0x0000
                  |L4.24|
                          DCD      0x400b0000

                          AREA ||i.QEI_EnableInt||, CODE, READONLY, ALIGN=2

                  QEI_EnableInt PROC
;;;72       */
;;;73     void QEI_EnableInt(QEI_T* qei, uint32_t u32IntSel)
000000  6982              LDR      r2,[r0,#0x18]
;;;74     {
;;;75         /* Enable QEI specified interrupt */
;;;76         QEI_ENABLE_INT(qei, u32IntSel);
000002  430a              ORRS     r2,r2,r1
000004  6182              STR      r2,[r0,#0x18]
;;;77     
;;;78         /* Enable NVIC QEI IRQ */
;;;79         if(qei == (QEI_T*)QEI0)
000006  4904              LDR      r1,|L5.24|
000008  4288              CMP      r0,r1
00000a  d101              BNE      |L5.16|
;;;80         {
;;;81             NVIC_EnableIRQ(QEI0_IRQn);
00000c  2054              MOVS     r0,#0x54
00000e  e000              B        |L5.18|
                  |L5.16|
;;;82         }
;;;83         else
;;;84         {
;;;85             NVIC_EnableIRQ(QEI1_IRQn);
000010  2055              MOVS     r0,#0x55
                  |L5.18|
000012  f7ffbffe          B.W      NVIC_EnableIRQ
;;;86         }
;;;87     }
;;;88     
                          ENDP

000016  0000              DCW      0x0000
                  |L5.24|
                          DCD      0x400b0000

                          AREA ||i.QEI_Open||, CODE, READONLY, ALIGN=1

                  QEI_Open PROC
;;;100      */
;;;101    void QEI_Open(QEI_T* qei, uint32_t u32Mode, uint32_t u32Value)
000000  6983              LDR      r3,[r0,#0x18]
;;;102    {
;;;103        /* Set QEI function configuration */
;;;104        /* Set QEI counting mode */
;;;105        /* Enable IDX, QEA and QEB input to QEI controller */
;;;106        qei->CTL = (qei->CTL & (~QEI_CTL_MODE_Msk)) | ((u32Mode) | QEI_CTL_CHAEN_Msk | QEI_CTL_CHBEN_Msk | QEI_CTL_IDXEN_Msk);
000002  f4237340          BIC      r3,r3,#0x300
000006  430b              ORRS     r3,r3,r1
000008  f0430170          ORR      r1,r3,#0x70
00000c  6181              STR      r1,[r0,#0x18]
;;;107    
;;;108        /* Set QEI maximum count value in in compare-counting mode */
;;;109        qei->CNTMAX = u32Value;
00000e  6142              STR      r2,[r0,#0x14]
;;;110    }
000010  4770              BX       lr
;;;111    
                          ENDP


                          AREA ||i.QEI_Start||, CODE, READONLY, ALIGN=1

                  QEI_Start PROC
;;;117      */
;;;118    void QEI_Start(QEI_T* qei)
000000  6981              LDR      r1,[r0,#0x18]
;;;119    {
;;;120        /* Enable QEI controller function */
;;;121        qei->CTL |= QEI_CTL_QEIEN_Msk;
000002  f0415100          ORR      r1,r1,#0x20000000
000006  6181              STR      r1,[r0,#0x18]
;;;122    }
000008  4770              BX       lr
;;;123    
                          ENDP


                          AREA ||i.QEI_Stop||, CODE, READONLY, ALIGN=1

                  QEI_Stop PROC
;;;129      */
;;;130    void QEI_Stop(QEI_T* qei)
000000  6981              LDR      r1,[r0,#0x18]
;;;131    {
;;;132        /* Disable QEI controller function */
;;;133        qei->CTL &= (~QEI_CTL_QEIEN_Msk);
000002  f0215100          BIC      r1,r1,#0x20000000
000006  6181              STR      r1,[r0,#0x18]
;;;134    }
000008  4770              BX       lr
;;;135    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\..\\Library\\StdDriver\\src\\qei.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_qei_c_daf45e47____REV16|
#line 388 "..\\..\\..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___5_qei_c_daf45e47____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_qei_c_daf45e47____REVSH|
#line 402
|__asm___5_qei_c_daf45e47____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___5_qei_c_daf45e47____RRX|
#line 587
|__asm___5_qei_c_daf45e47____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
